on: [push]

env:
  RELEASE_START: 1170 # 1150, as this is latest build by GitLab CI
  CCACHE_DIR: $RUNNER_TEMP/ccache

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Install Docker binary
      run: |
        sudo su
        apt-get -y update
        apt-get -y install docker.io
        export DEBIAN_FRONTEND=noninteractive
        apt-get update -y &&     apt-get install -y python2 git-core gnupg flex bison gperf build-essential     zip curl zlib1g-dev libc6-dev-i386 rsync     lib32ncurses5-dev lib32z-dev ccache     libgl1-mesa-dev libxml2-utils xsltproc unzip mtools u-boot-tools     htop iotop sysstat iftop pigz bc device-tree-compiler lunzip     dosfstools gcc-aarch64-linux-gnu g++-aarch64-linux-gnu     gcc-arm-linux-gnueabi g++-arm-linux-gnueabi ccache     sudo cpio nano vim kmod kpartx wget libarchive-tools qemu-user-static     xz-utils ruby-dev debootstrap multistrap libssl-dev parted     live-build jq locales     gawk swig libpython2-dev libusb-1.0-0-dev     pkg-config autoconf golang-go     python3-distutils python3-dev     openjdk-8-jdk     eatmydata &&     apt-get autoclean
         locale-gen en_US.UTF-8
         export ENV LANG=en_US.UTF-8 && export LANGUAGE=en_US:en && export LC_ALL=en_US.UTF-8 && export USER=root && export HOME=/root
         git config --global user.email "you@rock64" &&     git config --global user.name "ROCK64 Shell"
         gem install fpm
         curl -L https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 | tar -C /tmp -jx &&     mv /tmp/bin/linux/amd64/github-release /usr/local/bin/
         which github-release
         curl https://storage.googleapis.com/git-repo-downloads/repo > /usr/local/bin/repo &&     chmod +x /usr/local/bin/repo
         git clone https://github.com/rockchip-linux/rkdeveloptool &&     cd rkdeveloptool &&     autoreconf -i &&     ./configure &&     make install &&     cd .. &&     rm -rf rkdeveloptool
         ln -s /usr/aarch64-linux-gnu/lib/ld-linux-aarch64.so.1 /lib/
         export LD_LIBRARY_PATH=/usr/aarch64-linux-gnu/lib:
         sed -i -e       's/%sudo\s\+ALL=(ALL\(:ALL\)\?)\s\+ALL/%sudo ALL=NOPASSWD:ALL/g'       /etc/sudoers

    - name: Reset ccache statistics
      run: ccache -M 0 -F 0
    - name: Build package
      run: |
        export RELEASE=$(($RELEASE_START+$GITHUB_RUN_NUMBER))
        ./dev-make kernel-package
    - name: Release package
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        set -x

        export RELEASE=$(($RELEASE_START+$GITHUB_RUN_NUMBER))
        export RELEASE_NAME="$(./dev-make version)"
        export RELEASE_TITLE="$(./dev-make version)"
        export DESCRIPTION="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"

        github-release release \
          --tag "${RELEASE_NAME}" \
          --name "${RELEASE_TITLE}" \
          --user "${GITHUB_REPOSITORY%/*}" \
          --repo "${GITHUB_REPOSITORY#*/}" \
          --description "${DESCRIPTION}" \
          --target "${GITHUB_SHA}" \
          --draft

        sleep 3s # allow to update release

        for i in ../*$(./dev-make info)*.deb; do
          github-release upload \
            --tag "${RELEASE_NAME}" \
            --name "$(basename "${i}")" \
            --user "${GITHUB_REPOSITORY%/*}" \
            --repo "${GITHUB_REPOSITORY#*/}" \
            --file "${i}"
        done

        github-release edit \
          --tag "${RELEASE_NAME}" \
          --name "${RELEASE_TITLE}" \
          --user "${GITHUB_REPOSITORY%/*}" \
          --repo "${GITHUB_REPOSITORY#*/}" \
          --description "${DESCRIPTION}"

        rm ../*$(./dev-make info)*.deb
